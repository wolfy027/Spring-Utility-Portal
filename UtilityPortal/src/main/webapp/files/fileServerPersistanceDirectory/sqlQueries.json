{
	ORACLE : {	
	
	#jitendra	
	"GET_ACTIVE_FRESH_OBJECT" : {
     "isActive" : true,
     "sqlQuery" : "SELECT DISTINCT E.EMP_NUM FROM EMP_MAIN E,STR_MAIN SM,EMP_STR_MAIN ESM,LK_JOB_TITLE LKJ WHERE E.IS_SHARED_EMPLOYEE= 0 AND E.COMPANY_START_DATE < ? AND E.FK_EMP_STR_MAIN_ID=ESM.PRIMARY_KEY AND ESM.FK_STR_MAIN_ID=(SELECT PRIMARY_KEY FROM STR_MAIN WHERE IDEN_NO=?) AND E.FK_EMP_STR_MAIN_ID(+) = ESM.PRIMARY_KEY AND LKJ.IS_MANAGER_SCHEDULE = 0 AND E.FK_LK_CR_POSJOBCODE_1 = LKJ.PRIMARY_KEY AND TERMINATED_ON is null",
     "dbDataTypeArray" : [STRING,STRING],
     "queryType" : "RESULT_QUERY"
    },	
    
		#ankit		
		"SHARE_EMPLOYEE_DROPDOWN" : {
			"isActive" : true,
			"sqlQuery" : "SELECT iden_no || ', ' || store_name FROM STR_MAIN WHERE PRIMARY_KEY = (SELECT FK_STR_MAIN_ID FROM EMP_MAIN WHERE EMP_NUM = ?)",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},
		"FIND_EMP_HOME_AND_SHARE_STORE" : {
			"isActive" : true,
			"sqlQuery" : "Select Iden_No from Str_Main Where Primary_Key IN (Select Fk_Str_Main_ID From Emp_Str_Main Where Fk_Emp_Main_Id=(Select Primary_Key From Emp_Main Where email_address = ?))",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},
		"WEEKLY_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",t2.week_no_in_period AS \"WEEK NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1),2) AS \"NET SALES\",ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\",IS_POSTED AS \"POSTED\",IS_APPROVED AS \"APPROVED\" FROM CWC_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<=? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},			
			"PERIOD_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1),2) AS \"NET SALES\",ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\" FROM CPD_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},	
		"YEARLY_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1),2) AS \"NET SALES\",ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\",IS_POSTED AS \"POSTED\",IS_APPROVED AS \"APPROVED\" FROM CYP_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_CASH_AND_SALES_NET_SALES"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"select ROUND((CONF_NUMB1),2) AS \"NET SALES\" FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_CASH_AND_SALES_GROSS_TAX_ERS_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"select ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\"   FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_CASH_AND_SALES_POSTED_ERS_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"select IS_POSTED AS \"POSTED\"   FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"DAILY_CASH_AND_SALES_APPROVE_ERS_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"select IS_APPROVED AS \"APPROVED\"    FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_REGIONAL_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"Select Cal_Per_Detail.Period_No As \"Period No\",Wwk_Main.Week_No_In_Period As \"Week No\",TO_CHAR(Rdc_Main.Busi_Date, 'MM/DD/YYYY') as \"DATE\",Rgn_Main.Region_Name As\"Region\",Round(Rdc_Main.Conf_Numb1,2) As \"Net Sales\",Round((Rdc_Main.Conf_Numb1+Rdc_Main.Conf_Numb12+Rdc_Main.Conf_Numb13),2) As \"Gross - Tax\",Round((Rdc_Main.Conf_Numb2),2) As \"Transactions\", Case    When Rdc_Main.Conf_Numb2= 0 Then 0    When Rdc_Main.Conf_Numb2 != 0 Then Round(Rdc_Main.Conf_Numb1/Rdc_Main.Conf_Numb2,2)End AS \"Check Avg\",Case    When Rdc_Main.Conf_Numb2= 0 Then 0    When Rdc_Main.Conf_Numb2 != 0 Then Round(Rdc_Main.Conf_Numb4/Rdc_Main.Conf_Numb2,2)End As \"Drink Per Trans\",Round((Rdc_Main.Conf_Numb6-Rdc_Main.Conf_Numb195),2) As \"Cash Over/Shot\",Round((Rdc_Main.Conf_Numb87+Rdc_Main.Conf_Numb86),2) As \"Overings/Refunds\",Case    When Rdc_Main.Conf_Numb1= 0 Then 0    When Rdc_Main.Conf_Numb1 != 0 Then Round(Rdc_Main.Conf_Numb9,2)End As \"Deletions After\" From Rdc_Main,Rgn_Main,Wwk_Main,Cal_Per_Detail Where Rdc_Main.Fk_Rgn_Main_Id=Rgn_Main.Primary_Key and Wwk_Main.Fk_Cal_Main_Id=Cal_Per_Detail.Fk_Cal_Main_Id and Wwk_Main.Fk_Cal_Per_Detail_Id=Cal_Per_Detail.Primary_key And Rdc_Main.Busi_Date>=? And Rdc_Main.Busi_Date<= ? And Rdc_Main.Busi_Date Between Wwk_Main.Busi_Date AND Wwk_Main.End_Date_Min_One And Rdc_Main.Busi_Date Between Cal_Per_Detail.Busi_Date And Cal_Per_Detail.End_Date_Min_One And Rgn_Main.Region_Name=? ORDER BY Rdc_Main.Busi_Date Desc",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"WEEKLY_REGIONAL_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"Select Cal_Per_Detail.Period_No As \"Period No\",Wwk_Main.Week_No_In_Period As \"Week No\",TO_CHAR(Rwc_Main.Busi_Date, 'MM/DD/YYYY') As \"Date\",Rgn_Main.Region_Name As \"Region\",Round(Rwc_Main.Conf_Numb1,2) As \"Net Sales\", Round((Rwc_Main.Conf_Numb1+Rwc_Main.Conf_Numb12+Rwc_Main.Conf_Numb13),2) As \"Gross - Tax\",Round((Rwc_Main.Conf_Numb2),2) As \"Transactions\", Case    When Rwc_Main.Conf_Numb2= 0 Then 0    When Rwc_Main.Conf_Numb2 != 0 Then Round(Rwc_Main.Conf_Numb1/Rwc_Main.Conf_Numb2,2)End AS \"Check Avg\",Case    When Rwc_Main.Conf_Numb2= 0 Then 0    When Rwc_Main.Conf_Numb2 != 0 Then Round(Rwc_Main.Conf_Numb4/Rwc_Main.Conf_Numb2,2)End As \"Drink Per Trans\",Round((Rwc_Main.Conf_Numb6-Rwc_Main.Conf_Numb195),2) As \"Cash Over/Shot\",Round((Rwc_Main.Conf_Numb87+Rwc_Main.Conf_Numb86),2) As \"Overings/Refunds\",Case    When Rwc_Main.Conf_Numb1= 0 Then 0    When Rwc_Main.Conf_Numb1 != 0 Then Round(Rwc_Main.Conf_Numb9,2)End As \"Deletions After\"  From Rwc_Main,Rgn_Main,Wwk_Main,Cal_Per_Detail Where Rwc_Main.Fk_Rgn_Main_Id=Rgn_Main.Primary_Key and Wwk_Main.Fk_Cal_Main_Id=Cal_Per_Detail.Fk_Cal_Main_Id and Wwk_Main.Fk_Cal_Per_Detail_Id=Cal_Per_Detail.Primary_key And Rwc_Main.Busi_Date>=? And Rwc_Main.Busi_Date<= ? And Rwc_Main.Busi_Date Between Wwk_Main.Busi_Date AND Wwk_Main.End_Date_Min_One And Rwc_Main.Busi_Date Between Cal_Per_Detail.Busi_Date And Cal_Per_Detail.End_Date_Min_One And Rgn_Main.Region_Name=? ORDER BY Rwc_Main.Busi_Date Desc",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"MONTHLY_REGIONAL_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"Select Cal_Per_Detail.Period_No As \"Period No\",TO_CHAR(Rpd_Main.Busi_Date, 'MM/DD/YYYY') As \"Date\",Rgn_Main.Region_Name As \"Region\",Round(Rpd_Main.Conf_Numb1,2) As \"Net Sales\",Round((Rpd_Main.Conf_Numb1+Rpd_Main.Conf_Numb12+Rpd_Main.Conf_Numb13),2) As \"Gross - Tax\",Round((Rpd_Main.Conf_Numb2),2) As \"Transactions\", Case When Rpd_Main.Conf_Numb2= 0 Then 0    When Rpd_Main.Conf_Numb2 != 0 Then Round(Rpd_Main.Conf_Numb1/Rpd_Main.Conf_Numb2,2) End AS \"Check Avg\",Case When Rpd_Main.Conf_Numb2= 0 Then 0    When Rpd_Main.Conf_Numb2 != 0 Then Round(Rpd_Main.Conf_Numb4/Rpd_Main.Conf_Numb2,2)End As \"Drink Per Trans\",Round((Rpd_Main.Conf_Numb6-Rpd_Main.Conf_Numb195),2) As \"Cash Over/Shot\",Round((Rpd_Main.Conf_Numb87+Rpd_Main.Conf_Numb86),2) As \"Overings/Refunds\",Case When Rpd_Main.Conf_Numb1= 0 Then 0    When Rpd_Main.Conf_Numb1 != 0 Then Round((Rpd_Main.Conf_Numb9),2)End As \"Deletions After\" From Rpd_Main,Rgn_Main,Wwk_Main,Cal_Per_Detail Where Rpd_Main.Fk_Rgn_Main_Id=Rgn_Main.Primary_Key and Wwk_Main.Fk_Cal_Main_Id=Cal_Per_Detail.Fk_Cal_Main_Id and Wwk_Main.Fk_Cal_Per_Detail_Id=Cal_Per_Detail.Primary_key And Rpd_Main.Busi_Date>=? And Rpd_Main.Busi_Date<=? And Rpd_Main.Busi_Date Between Wwk_Main.Busi_Date AND Wwk_Main.End_Date_Min_One And Rpd_Main.Busi_Date Between Cal_Per_Detail.Busi_Date And Cal_Per_Detail.End_Date_Min_One And Rgn_Main.Region_Name=? ORDER BY Rpd_Main.Busi_Date Desc",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"YEARLY_REGIONAL_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"Select Cal_Per_Detail.Period_No As \"Period No\",TO_CHAR(Ryp_Main.Busi_Date, 'MM/DD/YYYY') As \"Date\",Rgn_Main.Region_Name As \"Region\",Round(Ryp_Main.Conf_Numb1,2) As \"Net Sales\",Round((Ryp_Main.Conf_Numb1+Ryp_Main.Conf_Numb12+Ryp_Main.Conf_Numb13),2) As \"Gross - Tax\",Round((Ryp_Main.Conf_Numb2),2) As \"Transactions\", Case When Ryp_Main.Conf_Numb2= 0 Then 0    When Ryp_Main.Conf_Numb2 != 0 Then Round(Ryp_Main.Conf_Numb1/Ryp_Main.Conf_Numb2,2)End AS \"Check Avg\",Case When Ryp_Main.Conf_Numb2= 0 Then 0    When Ryp_Main.Conf_Numb2 != 0 Then Round(Ryp_Main.Conf_Numb4/Ryp_Main.Conf_Numb2,2)End As \"Drink Per Trans\",Round((Ryp_Main.Conf_Numb6-Ryp_Main.Conf_Numb195),2) As \"Cash Over/Shot\",Round((Ryp_Main.Conf_Numb87+Ryp_Main.Conf_Numb86),2) As \"Overings/Refunds\",Case    When Ryp_Main.Conf_Numb1= 0 Then 0    When Ryp_Main.Conf_Numb1 != 0 Then Round((Ryp_Main.Conf_Numb9),2)End As \"Deletions After\" From Ryp_Main,Rgn_Main,Wwk_Main,Cal_Per_Detail Where Ryp_Main.Fk_Rgn_Main_Id=Rgn_Main.Primary_Key and Wwk_Main.Fk_Cal_Main_Id=Cal_Per_Detail.Fk_Cal_Main_Id and Wwk_Main.Fk_Cal_Per_Detail_Id=Cal_Per_Detail.Primary_key And Ryp_Main.Busi_Date>=? And Ryp_Main.Busi_Date<=? And Ryp_Main.Busi_Date Between Wwk_Main.Busi_Date AND Wwk_Main.End_Date_Min_One And Ryp_Main.Busi_Date Between Cal_Per_Detail.Busi_Date And Cal_Per_Detail.End_Date_Min_One And Rgn_Main.Region_Name=? ORDER BY Ryp_Main.Busi_Date Desc",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		
		
		
		
	#vicky	
	"FIND_WASTE_ID" : {
		"isActive" : true,
			"sqlQuery" : "Select  Primary_Key From  WST_MAIN Where  Fk_Str_Main_Id=(Select  Primary_Key From  Str_Main Where  Iden_No= ?) Order  By  Primary_Key Desc",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
	},
	"FIND_STORE_LIST_ABOUT_USER" : {
		"isActive" : true,
		"sqlQuery" : "Select   Iden_No||', '   ||STORE_NAME as   Store_No from   Str_Main Where  Primary_Key In(Select  FK_Str_Main_Id From  Rgn_Fin_Str Where  Fk_Rgn_Main_Id=(Select  Fk_Rgn_Main_Id From   Usr_Main Where   User_Name= ?)) ",
		"dbDataTypeArray" : [STRING],
		"queryType" : "RESULT_QUERY"
	},
	"FIND_UNPOSTED_COMMEND_N_DISCP_NOTICE" : {
			"isActive" : true,
			"sqlQuery" : "Select COUNT(*) from EMP_DC_ACTION WHERE COMM_DISC_STATUS='Unposted' AND FK_STR_MAIN_ID=(SELECT PRIMARY_KEY FROM  STR_MAIN WHERE IDEN_NO= ? ) AND DC_TYPE_STR_ID= ? ",
			"dbDataTypeArray" : [STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"FIND_ALL_DESCP_AND_COMMENT_FOR_SELECT" : {
			"isActive" : true,
			"sqlQuery" : "select TEXT_DESCRIPTION from lk_dc_action_code where IS_COMMENDATION= ? ",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"FIND_ALL_COMMEND_AND_DESCP_ACTION_FOR_EMP" : {
			"isActive" : true,
			"sqlQuery" : "SELECT COUNT(BUSI_DATE) FROM EMP_DC_ACTION  WHERE FK_EMP_MAIN_ID= (SELECT PRIMARY_KEY FROM EMP_MAIN WHERE EMP_NUM=?) and DC_TYPE_STR_ID= ? ",
			"dbDataTypeArray" : [STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
	
		"FIND_SCHEDULE_FOR_EMPLOYEE" : {
			"isActive" : true,
			"sqlQuery" : "select str.iden_no ,fcw.busi_date \"WEEK_START_DATE\" ,emp.emp_num ,emp.first_name|| ' ' || emp.last_name, fcd.busi_date,(fcd.busi_date-fcw.busi_date+1), lkjob.job_code , fed.start_index, fed.end_index, fed.IS_Break , sum(end_index-start_index)/4+count(fk_emp_main_id)/4 \"TOTAL_SCH_HRS\" from str_main str, fcd_main fcd, fcw_main fcw, LK_JOB_TITLE lkjob, emp_main emp, fcd_emp_detail fed where fcd.fk_str_main_id = str.primary_key and fed.FK_FCD_MAIN_ID = fcd.primary_key and fed.FK_LK_JOB_TITLE_ID=lkjob.primary_key and fed.fk_emp_main_id=emp.primary_key and fcd.fk_fcw_main_id=fcw.primary_key and emp.emp_num = ? and fcw.busi_date = ?  group by str.iden_no,emp.emp_num, emp.first_name, emp.last_name, fcw.busi_date,fcd.busi_date, lkjob.job_code, fed.fk_emp_main_id, fcd.busi_date-fcw.busi_date+1, fed.start_index, fed.end_index, fed.is_Break order by 1,2,3,4,5,8",
			"dbDataTypeArray" : [STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"FIND_JOB_CODE_FOR_EMP" : {
		    "isActive" : true,
		    "sqlQuery" : "select lkjob.job_code from str_main str, fcd_main fcd, fcw_main fcw, LK_JOB_TITLE lkjob, emp_main emp, fcd_emp_detail fed where 
						  fcd.fk_str_main_id = str.primary_key and fed.FK_FCD_MAIN_ID = fcd.primary_key and fed.FK_LK_JOB_TITLE_ID=lkjob.primary_key and 
						  fed.fk_emp_main_id=emp.primary_key and fcd.fk_fcw_main_id=fcw.primary_key and emp.email_address= ? and fcd.busi_date = ? ",
			"dbDataTypeArray" : [STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"FIND_MEAL_BREAK_FOR_EMP" : {
			"isActive" : true, 
			"sqlQuery" : "select sum(end_index-start_index)/4+count(fk_emp_main_id)/4 \"TOTAL_SCH_HRS\" from str_main str , fcd_main fcd, fcw_main fcw, LK_JOB_TITLE lkjob, emp_main emp,
 						  fcd_emp_detail fed where fcd.fk_str_main_id = str.primary_key and fed.FK_FCD_MAIN_ID = fcd.primary_key and fed.FK_LK_JOB_TITLE_ID=lkjob.primary_key and 
						  fed.fk_emp_main_id=emp.primary_key and fcd.fk_fcw_main_id=fcw.primary_key and emp.email_address= ? and fcd.busi_date = ? and fed.is_break=2",
			"dbDataTypeArray" : [STRING, STRING],
			"queryType" : "SINGLE_RESULT_QUERY"	
		},
	
		"FIND_TOTAL_DAILY_HRS": { 
			 "isActive":true,
			 "sqlQuery" :"Select TT_HRS From Fcd_Emp_Hdr_Detail,Emp_Main
        					 Where  Email_address=? and FK_FCD_MAIN_ID=(Select Primary_Key from FCd_MAIN Where Busi_Date=? And Fk_Str_Main_Id=(Select Primary_Key from Str_Main Where 
         					Iden_No=?) ) And Fcd_Emp_Hdr_Detail.FK_EMP_MAIN_ID= Emp_Main.Primary_Key",
        	 "dbDataTypeArray" : [STRING,STRING,STRING],
		 	 "queryType" : "SINGLE_RESULT_QUERY"
         },
         
         "FIND_TOTAL_WKL_HRS": {
        	 "isActive":true,
             "sqlQuery":"Select TT_HRS From Fcw_Emp_Hdr_Detail,Emp_Main
             			 Where Email_address=? and FK_FCW_MAIN_ID=(Select Primary_Key from FCW_MAIN Where Busi_Date=? And Fk_Str_Main_Id=(Select Primary_Key from Str_Main Where Iden_No=?) ) And Fcw_Emp_Hdr_Detail.FK_EMP_MAIN_ID= Emp_Main.Primary_Key",
             "dbDataTypeArray" :[STRING,STRING,STRING],
    		 "queryType" : "SINGLE_RESULT_QUERY"
	    },
		
		"FIND_EMP_HOME_STORE" : {
			"isActive" : true,
			"sqlQuery" : "Select Unique_ID From Emp_Str_Main Where Fk_Emp_Main_Id=(Select Primary_Key From Emp_Main Where email_address=?)",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"FIND_EMP_HOME_AND_SHARE_STORE" : {
			"isActive" : true,
			"sqlQuery" : "Select Iden_No from Str_Main
						  Where Primary_Key IN (Select Fk_Str_Main_ID From Emp_Str_Main Where Fk_Emp_Main_Id=(Select Primary_Key From Emp_Main Where email_address = ?))",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"FIND_EMP_NUM_FOR_EMAIL_ID" : {
			"isActive" : true,
			"sqlQuery" : "SELECT EMP_NUM FROM EMP_MAIN WHERE EMAIL_ADDRESS = ?",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},
		
		#vijay
		 "MCD_NICK_NAME":  {
			    "isActive"  : true,
			"sqlQuery"  :   " select  NICK_NAME from  emp_main where  EMP_NUM=?",
			    "dbDataTypeArray"  : [STRING],
			    "queryType"  : "SINGLE_RESULT_QUERY"
			},
		"FIND_AVAIL_PRIMARY":  {
		    "isActive" : true,
			"sqlQuery" :   "select text_description from lk_job_title where is_manager=? ",
		    "dbDataTypeArray" : [STRING],
		    "queryType" : "RESULT_QUERY"
		},
		
		"FIND_PENDING_EMP":  {
		    "isActive" : true,
			"sqlQuery" :   "select FIRST_NAME,LAST_NAME,BIRTH_DATE from emp_temp_main where s_s_num= ? ",
		    "dbDataTypeArray" : [STRING],
		    "queryType" : "RESULT_QUERY"
		},
		
		
		"FIND_SCH_EMPLOYEE":  {
		    "isActive" : true,
			"sqlQuery" :   " Select First_Name,Last_Name From Fcd_Emp_Hdr_Detail,Emp_Main
                             Where FK_FCD_MAIN_ID=(Select Primary_Key from FCd_MAIN Where Busi_Date=?
                             And Fk_Str_Main_Id=(Select Primary_Key from Str_Main Where Iden_No= (select  iden_no from  
                             str_main where  primary_key = (Select  fk_str_main_id from  emp_main where  email_address = ?))))  And 
                             Fcd_Emp_Hdr_Detail.FK_EMP_MAIN_ID= Emp_Main.Primary_Key ",
		"dbDataTypeArray" : [STRING, STRING],
		"queryType" : "RESULT_QUERY"
		},
		 "EFFECT_RES_START_DATE_EXECUTE_QUERY"	:	{
				"isActive"	:	true,
				"sqlQuery"	:	"Delete Emp_Dc_Act_Aud_Detail;Delete Emp_Dc_Action;Delete Loa_history;Delete Emp_Transfer;Delete Emp_Temp_Main;Delete EMP_TEMP_AVAILABILITY;Delete EMP_TEMP_SCH_JOB_TITLE;Delete Emp_Aud_Detail;Delete Emp_Perf_Aud_Detail;Delete Emp_Perf_Main;Delete Emp_Tranf_Hist;Update Emp_Main Set Seq_Num_For_Audit=0;Update Emp_Main Set Next_Review_Date='31 May 2016';Update Emp_Main Set Orientation_Date='30 June 2016';Update Emp_Main Set Follow_Up_Orientation_Date='31 May 2017';Update Emp_Main Set First_Name=Upper(First_Name);Update Emp_Main Set First_Name_Cap=Upper(First_Name_Cap);Update Emp_Main Set Last_Name=Upper(Last_Name);Update Emp_Main Set Last_Name_Cap=Upper(Last_Name_Cap);Update Emp_Main Set A_State=Upper(A_State);Update Emp_Main Set A_Address=Upper(A_Address);Update Emp_Main Set A_Address2=Upper(A_Address2);Commit;",
				"dbDataTypeArray" : [],
				"queryType" : "RESULT_QUERY"
		 	},
		
		
		#vijay- Projection
		 "FIND_GEID_WITH_PK_UNAME_PASSWORD":  {
			    "isActive" : true,
			"sqlQuery" :   "Select Emp_Main.Emp_Num As GEID,Usr_Main.Primary_Key,Usr_Main.User_Name,Usr_Main.User_Password From Usr_Main,Emp_Main 
			                              Where Usr_Main.Fk_Emp_Main_Id=Emp_Main.Primary_Key And Usr_Main.Primary_Key IN(Select Fk_Usr_Main_Id From Usr_Str_Role 
			                              Where Fk_Rol_Main_Id=(Select Primary_Key From Rol_Main Where Iden_No=?))",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
			},
		
	
	
		
		
		
		
		#jomon
		"SUMMARY_OBJECTS_DAILY_CASH_AND_SALES" : {
			"isActive" : true,
			"sqlQuery" : "select count(*) from csh_main where busi_date>=sysdate-365 and fk_str_main_id in (select primary_key from str_main where iden_no='000881') order by busi_date desc",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		"CASH_AND_SALES_MAIN" : {
			"isActive" : true,
			"sqlQuery" : "SELECT DETAIL FROM CST_MAIN",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_CASH_AND_SALES_SUMMARY_LEGACY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",t2.week_no_in_period AS \"WEEK NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1),2) AS \"NET SALES\",ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB1= 0 THEN 0    WHEN CONF_NUMB1 != 0 THEN ROUND(((CONF_NUMB39/CONF_NUMB1)*100),2)END  AS \"DELETIONS AFTER\",IS_POSTED AS \"POSTED\",IS_APPROVED AS \"APPROVED\" FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DAILY_CASH_AND_SALES_SUMMARY_RESKIN"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",t2.week_no_in_period AS \"WEEK NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB1= 0 THEN 0    WHEN CONF_NUMB1 != 0 THEN ROUND(((CONF_NUMB39/CONF_NUMB1)*100),2)END  AS \"DELETIONS AFTER\",CASE   WHEN IS_APPROVED=1 THEN 'Approved'   WHEN IS_POSTED=1 THEN 'Posted'    WHEN IS_POSTED=0 THEN 'Unposted' END AS \"STATUS\" FROM CSH_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"WEEKLY_CASH_AND_SALES_SUMMARY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",t2.week_no_in_period AS \"WEEK NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\",CASE   WHEN IS_APPROVED=1 THEN 'Approved'   WHEN IS_POSTED=1 THEN 'Posted'    WHEN IS_POSTED=0 THEN 'Unposted' END AS \"STATUS\" FROM CWC_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"PERIOD_CASH_AND_SALES_SUMMARY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\" FROM CPD_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"YEARLY_CASH_AND_SALES_SUMMARY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT t3.PERIOD_NO AS \"PERIOD NO\",TO_CHAR(t1.BUSI_DATE, 'MM/DD/YYYY') as \"DATE\",t4.store_name,ROUND((CONF_NUMB1+CONF_NUMB13+CONF_NUMB12),2) AS \"GROSS TAX\",ROUND((CONF_NUMB2),2) AS \"TRANSACTIONS\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB1/CONF_NUMB2,2)END AS \"CHECK AVG\",CASE    WHEN CONF_NUMB2 = 0 THEN 0    WHEN CONF_NUMB2 != 0 THEN ROUND(CONF_NUMB4/CONF_NUMB2,2)END AS \"DRINK PER TRANS\",ROUND((CONF_NUMB6-CONF_NUMB195),2) AS \"CASH OVERSHORT\",ROUND((CONF_NUMB87+CONF_NUMB86),2) AS \"OVERRINGS REFUNDS\",CASE    WHEN CONF_NUMB9= 0 THEN 0    WHEN CONF_NUMB9 != 0 THEN ROUND(((CONF_NUMB9)),2)END  AS \"DELETIONS AFTER\",CASE   WHEN IS_APPROVED=1 THEN 'Approved'   WHEN IS_POSTED=1 THEN 'Posted'    WHEN IS_POSTED=0 THEN 'Unposted' END AS \"STATUS\" FROM CYP_MAIN t1,WWK_MAIN t2,CAL_PER_DETAIL t3,STR_MAIN t4 WHERE t1.BUSI_DATE>=? AND t1.BUSI_DATE<= ? AND t1.BUSI_DATE BETWEEN T2.BUSI_DATE AND T2.END_DATE_MIN_ONE AND t1.BUSI_DATE BETWEEN T3.BUSI_DATE AND T3.END_DATE_MIN_ONE AND FK_STR_MAIN_ID IN (SELECT t4.PRIMARY_KEY FROM STR_MAIN WHERE t4.IDEN_NO=?) ORDER BY t1.BUSI_DATE DESC",
			"dbDataTypeArray" : [STRING, STRING, STRING],
			"queryType" : "RESULT_QUERY"
		},
		"CHECK_SSN_COUNT_IN_EMP_MAIN"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT COUNT(*) FROM EMP_MAIN WHERE S_S_NUM = ?",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},
		"CHECK_SSN_COUNT_IN_TEMP_MAIN"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT COUNT(*) FROM EMP_TEMP_MAIN WHERE S_S_NUM = ?",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},		
		"STORE_VENDOR_NAMES"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT E1.VENDOR_NAME FROM VEN_MAIN E1,STR_MAIN E2,STR_VEN_MAIN E3 WHERE E2.IDEN_NO=? AND E3.FK_VEN_MAIN_ID=E1.PRIMARY_KEY AND E3.FK_STR_MAIN_ID=E2.PRIMARY_KEY",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},	
		"STORE_VENDOR_NAMES_WITH_IDEN_NO"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT concat(E1.VENDOR_NAME,CONCAT(', ',E1.IDEN_NO)) as Vendors  FROM VEN_MAIN E1,STR_MAIN E2,STR_VEN_MAIN E3 WHERE E2.IDEN_NO=? AND E3.FK_VEN_MAIN_ID=E1.PRIMARY_KEY AND E3.FK_STR_MAIN_ID=E2.PRIMARY_KEY UNION SELECT  'Select Vendor' as Vendors from dual",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		"DATE_RANGES"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"with t as(select (column_value).getstringval() DATERANGES from xmltable('\"Select Date Range\",\"1 Week\" ,\"2 Week\",\"4 Week\", \"1 Month\",\"3 Month\",\"6 Month\", \"1 Year\", \"2 Year\", \"5 Year\"')) SELECT DATERANGES FROM t",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		"STORE_BASED_ON_OPERATIONAL_LEVEL_OF_USER"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"select CONCAT(CONCAT(IDEN_NO,', '),STORE_NAME) from str_main where fk_sta_main_id=(select fk_str_main_id from usr_main where upper(user_name) = upper(?))",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		
		
		#Hardesh		
		"CLEAR_PENDING_NEW_HIRE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_TEMP_MAIN;DELETE EMP_TEMP_AVAILABILITY; DELETE EMP_TEMP_SCH_JOB_TITLE;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		
		"CLEAR_EMPLOYEE_HISTORY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_AUD_DETAIL;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},	
		
		"CLEAR_PERFORMANCE_REVIEW_WAGE_JOB_CODE_ADJUSTMENT_EXCLUSIVE_AUDIT_TRAIL"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_PERF_AUD_DETAIL;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},		
		
		"CLEAR_PERFORMANCE_REVIEW_WAGE_JOB_CODE_ADJUSTMENT"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_PERF_MAIN;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},		
		
		"CLEAR_EMPLOYEE_TRANSFER"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_TRANSFER;DELETE EMP_TRANF_HIST;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		
		
		"RESET_SEQ_NUM_FOR_AUDIT_TRAIL"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET SEQ_NUM_FOR_AUDIT=0;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		
		"UPDATE_NEXT_REVIEW_DATE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET NEXT_REVIEW_DATE=?;COMMIT;",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},
		
		"UPDATE_ORIENTATION_DATE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET ORIENTATION_DATE=?;COMMIT;",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},	
		
		"UPDATE_FOLLOW_UP_ORIENTATION_DATE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET FOLLOW_UP_ORIENTATION_DATE=?;COMMIT;",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		},	

		"CLEAR_COMMENDATION_DISCIPLINARY_EXCLUSIVE_AUDIT_TRAIL"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_DC_ACT_AUD_DETAIL;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},			

		"CLEAR_COMMENDATION_DISCIPLINARY_ACTION"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_DC_ACTION;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},	
		
		"CLEAR_LOA_HISTORY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE LOA_HISTORY;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		}	,
		
		"CLEAR_JOB_HISTORY"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"DELETE EMP_JOB_TITLE_HISTORY;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		}	,
		"RESET_FUTURE_JOB_CODE/PAYRATE/EFFECTIVE_DATE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET POS_JOBEFFECTIVE_DATE='';UPDATE EMP_MAIN SET FK_LK_FT_POSJOBCODE_1='';UPDATE EMP_MAIN SET FK_LK_FT_POSJOBCODE_2='';UPDATE EMP_MAIN SET FT_POSJOB_PAY_RATE_1=0;UPDATE EMP_MAIN SET FT_POSJOB_PAY_RATE_2=0;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		"RESET_HIRED/RESSTART/JOBSTART/COMPSTART/COMPSERVICE_START_DATE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"UPDATE EMP_MAIN SET HIRED_DATE=?;UPDATE EMP_STR_MAIN SET HIRED_ON=?;UPDATE EMP_MAIN SET JOB_START_DATE=?;UPDATE EMP_MAIN SET COMPANY_START_DATE=?;UPDATE EMP_STR_MAIN SET RES_START_DATE=?;UPDATE EMP_MAIN SET COMPANY_SERVICE_DATE=?;COMMIT;",
			"dbDataTypeArray" : [],
			"queryType" : "RESULT_QUERY"
		},
		
		#FOOD
		"FIND_TRANSFER_FROM_ID"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT PRIMARY_KEY AS TRANSFER_ID FROM TRF_MAIN WHERE TRF_MAIN.FK_FR_STR_MAIN_ID=(SELECT PRIMARY_KEY FROM STR_MAIN WHERE IDEN_NO=?) Order  By  Primary_Key Desc",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},
		"FIND_TRANSFER_TO_ID"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT PRIMARY_KEY AS TRANSFER_ID FROM TRF_MAIN WHERE TRF_MAIN.FK_TO_STR_MAIN_ID=(SELECT PRIMARY_KEY FROM STR_MAIN WHERE IDEN_NO=?)Order  By  Primary_Key Desc ",
			"dbDataTypeArray" : [STRING],
			"queryType" : "SINGLE_RESULT_QUERY"
		},		
		"FIND_HOME_STORE"	:	{
			"isActive"	:	true,
			"sqlQuery"	:	"SELECT CONCAT(concat(SM.IDEN_NO,', '),SM.STORE_NAME) AS STORE_NAME FROM USR_MAIN UM,STR_MAIN SM WHERE USER_NAME=? AND UM.FK_STR_MAIN_ID=SM.PRIMARY_KEY",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		}
		
		
		
		
	},
	MYSQL : {
	},
	POSTGRESL : {
		"FIND_ORG_FOR_EMAIL_ID" : {
			"isActive" : true,
			"sqlQuery" : "SELECT ORGNAME, FKONRMAINID FROM EOEMAILDETAIL WHERE EOEMAILHEADERID = (SELECT PRIMARYKEY FROM EOEMAILHEADER WHERE EMAILID = ?)",
			"dbDataTypeArray" : [STRING],
			"queryType" : "RESULT_QUERY"
		}
	}
}